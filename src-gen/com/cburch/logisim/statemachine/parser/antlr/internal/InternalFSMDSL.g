/*
 * generated by Xtext
 */
grammar InternalFSMDSL;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package com.cburch.logisim.statemachine.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.cburch.logisim.statemachine.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.cburch.logisim.statemachine.services.FSMDSLGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private FSMDSLGrammarAccess grammarAccess;
 	
    public InternalFSMDSLParser(TokenStream input, FSMDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TOP";	
   	}
   	
   	@Override
   	protected FSMDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTOP
entryRuleTOP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTOPRule()); }
	 iv_ruleTOP=ruleTOP 
	 { $current=$iv_ruleTOP.current; } 
	 EOF 
;

// Rule TOP
ruleTOP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTOPAccess().getFSMParserRuleCall_0()); 
    }
    this_FSM_0=ruleFSM
    { 
        $current = $this_FSM_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTOPAccess().getCommandStmtParserRuleCall_1()); 
    }
    this_CommandStmt_1=ruleCommandStmt
    { 
        $current = $this_CommandStmt_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTOPAccess().getPredicateStmtParserRuleCall_2()); 
    }
    this_PredicateStmt_2=rulePredicateStmt
    { 
        $current = $this_PredicateStmt_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCommandStmt
entryRuleCommandStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandStmtRule()); }
	 iv_ruleCommandStmt=ruleCommandStmt 
	 { $current=$iv_ruleCommandStmt.current; } 
	 EOF 
;

// Rule CommandStmt
ruleCommandStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCommandStmtAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getInShortInputParserRuleCall_1_0()); 
	    }
		lv_in_1_0=ruleShortInput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_1_0, 
        		"ShortInput");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCommandStmtAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getInShortInputParserRuleCall_2_1_0()); 
	    }
		lv_in_3_0=ruleShortInput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_3_0, 
        		"ShortInput");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCommandStmtAccess().getRightSquareBracketKeyword_3());
    }
	otherlv_5='[' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCommandStmtAccess().getLeftSquareBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getOutShortOutputParserRuleCall_5_0()); 
	    }
		lv_out_6_0=ruleShortOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"out",
        		lv_out_6_0, 
        		"ShortOutput");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCommandStmtAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getOutShortOutputParserRuleCall_6_1_0()); 
	    }
		lv_out_8_0=ruleShortOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"out",
        		lv_out_8_0, 
        		"ShortOutput");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCommandStmtAccess().getRightSquareBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getCommandsCommandParserRuleCall_8_0()); 
	    }
		lv_commands_10_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_10_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCommandStmtAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandStmtAccess().getCommandsCommandParserRuleCall_9_1_0()); 
	    }
		lv_commands_12_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandStmtRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_12_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePredicateStmt
entryRulePredicateStmt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredicateStmtRule()); }
	 iv_rulePredicateStmt=rulePredicateStmt 
	 { $current=$iv_rulePredicateStmt.current; } 
	 EOF 
;

// Rule PredicateStmt
rulePredicateStmt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPredicateStmtAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getInShortInputParserRuleCall_1_0()); 
	    }
		lv_in_1_0=ruleShortInput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_1_0, 
        		"ShortInput");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPredicateStmtAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getInShortInputParserRuleCall_2_1_0()); 
	    }
		lv_in_3_0=ruleShortInput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_3_0, 
        		"ShortInput");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPredicateStmtAccess().getRightSquareBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPredicateStmtAccess().getPredicatePredicateParserRuleCall_4_0()); 
	    }
		lv_predicate_5_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPredicateStmtRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPredicateStmtAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleShortInput
entryRuleShortInput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortInputRule()); }
	 iv_ruleShortInput=ruleShortInput 
	 { $current=$iv_ruleShortInput.current; } 
	 EOF 
;

// Rule ShortInput
ruleShortInput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getShortInputAccess().getInputPortAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getShortInputAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortInputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShortInputAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		lv_width_3_0=RULE_INT
		{
			newLeafNode(lv_width_3_0, grammarAccess.getShortInputAccess().getWidthINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortInputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShortInputAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleShortOutput
entryRuleShortOutput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShortOutputRule()); }
	 iv_ruleShortOutput=ruleShortOutput 
	 { $current=$iv_ruleShortOutput.current; } 
	 EOF 
;

// Rule ShortOutput
ruleShortOutput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getShortOutputAccess().getOutputPortAction_0(),
            $current);
    }
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getShortOutputAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortOutputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getShortOutputAccess().getLeftSquareBracketKeyword_2());
    }
(
(
		lv_width_3_0=RULE_INT
		{
			newLeafNode(lv_width_3_0, grammarAccess.getShortOutputAccess().getWidthINTTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShortOutputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_3_0, 
        		"INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getShortOutputAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFSM
entryRuleFSM returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFSMRule()); }
	 iv_ruleFSM=ruleFSM 
	 { $current=$iv_ruleFSM.current; } 
	 EOF 
;

// Rule FSM
ruleFSM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFSMAccess().getFSMAction_0(),
            $current);
    }
)	otherlv_1='fsm' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFSMAccess().getFsmKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFSMAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFSMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getLayoutLayoutInfoParserRuleCall_3_0()); 
	    }
		lv_layout_3_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_3_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFSMAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getInInputParserRuleCall_5_0_0()); 
	    }
		lv_in_5_0=ruleInput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"in",
        		lv_in_5_0, 
        		"Input");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getOutOutputParserRuleCall_5_1_0()); 
	    }
		lv_out_6_0=ruleOutput		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"out",
        		lv_out_6_0, 
        		"Output");
	        afterParserOrEnumRuleCall();
	    }

)
))+(	otherlv_7='codeWidth' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFSMAccess().getCodeWidthKeyword_6_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFSMAccess().getEqualsSignKeyword_6_1());
    }
(
(
		lv_width_9_0=RULE_INT
		{
			newLeafNode(lv_width_9_0, grammarAccess.getFSMAccess().getWidthINTTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFSMRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_9_0, 
        		"INT");
	    }

)
)	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFSMAccess().getSemicolonKeyword_6_3());
    }
)?(	otherlv_11='reset' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFSMAccess().getResetKeyword_7_0());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getFSMAccess().getEqualsSignKeyword_7_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFSMRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getFSMAccess().getStartStateCrossReference_7_2_0()); 
	}

)
)	otherlv_14=';' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getFSMAccess().getSemicolonKeyword_7_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFSMAccess().getStatesStateParserRuleCall_8_0()); 
	    }
		lv_states_15_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFSMRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_15_0, 
        		"State");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getFSMAccess().getRightCurlyBracketKeyword_9());
    }
)
;







// Entry rule entryRuleInput
entryRuleInput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInputRule()); }
	 iv_ruleInput=ruleInput 
	 { $current=$iv_ruleInput.current; } 
	 EOF 
;

// Rule Input
ruleInput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInputAccess().getInputPortAction_0(),
            $current);
    }
)	otherlv_1='in' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInputAccess().getInKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getInputAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInputAccess().getLeftSquareBracketKeyword_3_0());
    }
(
(
		lv_width_4_0=RULE_INT
		{
			newLeafNode(lv_width_4_0, grammarAccess.getInputAccess().getWidthINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_4_0, 
        		"INT");
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInputAccess().getRightSquareBracketKeyword_3_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInputAccess().getLayoutLayoutInfoParserRuleCall_4_0()); 
	    }
		lv_layout_6_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInputRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_6_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInputAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	 iv_ruleOutput=ruleOutput 
	 { $current=$iv_ruleOutput.current; } 
	 EOF 
;

// Rule Output
ruleOutput returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOutputAccess().getOutputPortAction_0(),
            $current);
    }
)	otherlv_1='out' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutputAccess().getOutKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getOutputAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='[' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutputAccess().getLeftSquareBracketKeyword_3_0());
    }
(
(
		lv_width_4_0=RULE_INT
		{
			newLeafNode(lv_width_4_0, grammarAccess.getOutputAccess().getWidthINTTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutputRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_4_0, 
        		"INT");
	    }

)
)	otherlv_5=']' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOutputAccess().getRightSquareBracketKeyword_3_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOutputAccess().getLayoutLayoutInfoParserRuleCall_4_0()); 
	    }
		lv_layout_6_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutputRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_6_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOutputAccess().getSemicolonKeyword_5());
    }
)
;





// Entry rule entryRuleCommandList
entryRuleCommandList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandListRule()); }
	 iv_ruleCommandList=ruleCommandList 
	 { $current=$iv_ruleCommandList.current; } 
	 EOF 
;

// Rule CommandList
ruleCommandList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCommandListAccess().getCommandListAction_0(),
            $current);
    }
)(	otherlv_1='commands' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommandListAccess().getCommandsKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandListAccess().getLayoutLayoutInfoParserRuleCall_1_1_0()); 
	    }
		lv_layout_2_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandListRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_2_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCommandListAccess().getLeftCurlyBracketKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandListAccess().getCommandsCommandParserRuleCall_1_3_0()); 
	    }
		lv_commands_4_0=ruleCommand		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandListRule());
	        }
       		add(
       			$current, 
       			"commands",
        		lv_commands_4_0, 
        		"Command");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCommandListAccess().getRightCurlyBracketKeyword_1_4());
    }
)?)
;





// Entry rule entryRuleLayoutInfo
entryRuleLayoutInfo returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLayoutInfoRule()); }
	 iv_ruleLayoutInfo=ruleLayoutInfo 
	 { $current=$iv_ruleLayoutInfo.current; } 
	 EOF 
;

// Rule LayoutInfo
ruleLayoutInfo returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLayoutInfoAccess().getLayoutInfoAction_0(),
            $current);
    }
)(	otherlv_1='@[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLayoutInfoAccess().getCommercialAtLeftSquareBracketKeyword_1_0());
    }
(
(
		lv_x_2_0=RULE_INT
		{
			newLeafNode(lv_x_2_0, grammarAccess.getLayoutInfoAccess().getXINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"x",
        		lv_x_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLayoutInfoAccess().getCommaKeyword_1_2());
    }
(
(
		lv_y_4_0=RULE_INT
		{
			newLeafNode(lv_y_4_0, grammarAccess.getLayoutInfoAccess().getYINTTerminalRuleCall_1_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"y",
        		lv_y_4_0, 
        		"INT");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLayoutInfoAccess().getCommaKeyword_1_4_0());
    }
(
(
		lv_width_6_0=RULE_INT
		{
			newLeafNode(lv_width_6_0, grammarAccess.getLayoutInfoAccess().getWidthINTTerminalRuleCall_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_6_0, 
        		"INT");
	    }

)
)	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLayoutInfoAccess().getCommaKeyword_1_4_2());
    }
(
(
		lv_height_8_0=RULE_INT
		{
			newLeafNode(lv_height_8_0, grammarAccess.getLayoutInfoAccess().getHeightINTTerminalRuleCall_1_4_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLayoutInfoRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_8_0, 
        		"INT");
	    }

)
))?	otherlv_9=']' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLayoutInfoAccess().getRightSquareBracketKeyword_1_5());
    }
)?)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateAccess().getStateAction_0(),
            $current);
    }
)	otherlv_1='state' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateAccess().getStateKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateAccess().getEqualsSignKeyword_3_0());
    }
(
(
		lv_code_4_0=RULE_BIN
		{
			newLeafNode(lv_code_4_0, grammarAccess.getStateAccess().getCodeBINTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_4_0, 
        		"BIN");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getLayoutLayoutInfoParserRuleCall_4_0()); 
	    }
		lv_layout_5_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_5_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_5());
    }
(	otherlv_7='code' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateAccess().getCodeKeyword_6_0());
    }
	otherlv_8='=' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateAccess().getEqualsSignKeyword_6_1());
    }
(
(
		lv_code_9_0=RULE_BIN
		{
			newLeafNode(lv_code_9_0, grammarAccess.getStateAccess().getCodeBINTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_9_0, 
        		"BIN");
	    }

)
)	otherlv_10=';' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateAccess().getSemicolonKeyword_6_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getCommandListCommandListParserRuleCall_7_0()); 
	    }
		lv_commandList_11_0=ruleCommandList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		set(
       			$current, 
       			"commandList",
        		lv_commandList_11_0, 
        		"CommandList");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='transitions' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStateAccess().getTransitionsKeyword_8_0());
    }
	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateAccess().getTransitionTransitionParserRuleCall_8_2_0()); 
	    }
		lv_transition_14_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateRule());
	        }
       		add(
       			$current, 
       			"transition",
        		lv_transition_14_0, 
        		"Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_8_3());
    }
)?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getSrcStateCrossReference_0_0_0_0()); 
	}

)
)?	otherlv_1='->' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionAccess().getHyphenMinusGreaterThanSignKeyword_0_0_1());
    }
)
    |	otherlv_2='goto' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getGotoKeyword_0_1());
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getDstStateCrossReference_1_0()); 
	}

)
)(	otherlv_4='when' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getWhenKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getPredicatePredicateParserRuleCall_2_1_0()); 
	    }
		lv_predicate_5_0=rulePredicate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		set(
       			$current, 
       			"predicate",
        		lv_predicate_5_0, 
        		"Predicate");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getTransitionAccess().getLayoutLayoutInfoParserRuleCall_3_0()); 
	    }
		lv_layout_6_0=ruleLayoutInfo		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTransitionRule());
	        }
       		set(
       			$current, 
       			"layout",
        		lv_layout_6_0, 
        		"LayoutInfo");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	 iv_ruleCommand=ruleCommand 
	 { $current=$iv_ruleCommand.current; } 
	 EOF 
;

// Rule Command
ruleCommand returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommandRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getCommandAccess().getNameOutputPortCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCommandAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommandAccess().getValueOrParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleOr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommandRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Or");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCommandAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleRef
entryRuleRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefRule()); }
	 iv_ruleRef=ruleRef 
	 { $current=$iv_ruleRef.current; } 
	 EOF 
;

// Rule Ref
ruleRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getRefAccess().getPortRefAction_0(),
            $current);
    }
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRefAccess().getPortPortCrossReference_1_0()); 
	}

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getRefAccess().getLeftSquareBracketKeyword_2_0());
    }
((
(
		lv_ub_3_0=RULE_INT
		{
			newLeafNode(lv_ub_3_0, grammarAccess.getRefAccess().getUbINTTerminalRuleCall_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ub",
        		lv_ub_3_0, 
        		"INT");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getRefAccess().getColonKeyword_2_1_1());
    }
)?(
(
		lv_lb_5_0=RULE_INT
		{
			newLeafNode(lv_lb_5_0, grammarAccess.getRefAccess().getLbINTTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lb",
        		lv_lb_5_0, 
        		"INT");
	    }

)
)	otherlv_6=']' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getRefAccess().getRightSquareBracketKeyword_2_3());
    }
)?)
;





// Entry rule entryRulePredicate
entryRulePredicate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPredicateRule()); }
	 iv_rulePredicate=rulePredicate 
	 { $current=$iv_rulePredicate.current; } 
	 EOF 
;

// Rule Predicate
rulePredicate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPredicateAccess().getDefaultParserRuleCall_0()); 
    }
    this_Default_0=ruleDefault
    { 
        $current = $this_Default_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPredicateAccess().getOrParserRuleCall_1()); 
    }
    this_Or_1=ruleOr
    { 
        $current = $this_Or_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefault
entryRuleDefault returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultRule()); }
	 iv_ruleDefault=ruleDefault 
	 { $current=$iv_ruleDefault.current; } 
	 EOF 
;

// Rule Default
ruleDefault returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDefaultAccess().getDefaultPredicateAction_0(),
            $current);
    }
)	otherlv_1='default' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefaultAccess().getDefaultKeyword_1());
    }
)
;





// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	 iv_ruleOr=ruleOr 
	 { $current=$iv_ruleOr.current; } 
	 EOF 
;

// Rule Or
ruleOr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0()); 
    }
    this_And_0=ruleAnd
    { 
        $current = $this_And_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getOrAccess().getOrExprArgsAction_1_0(),
            $current);
    }
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOrAccess().getPlusSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOrAccess().getArgsAndParserRuleCall_1_2_0()); 
	    }
		lv_args_3_0=ruleAnd		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"And");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	 iv_ruleAnd=ruleAnd 
	 { $current=$iv_ruleAnd.current; } 
	 EOF 
;

// Rule And
ruleAnd returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAndAccess().getCmpParserRuleCall_0()); 
    }
    this_Cmp_0=ruleCmp
    { 
        $current = $this_Cmp_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getAndAccess().getAndExprArgsAction_1_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAndAccess().getFullStopKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAndAccess().getArgsCmpParserRuleCall_1_2_0()); 
	    }
		lv_args_3_0=ruleCmp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"Cmp");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleCmp
entryRuleCmp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCmpRule()); }
	 iv_ruleCmp=ruleCmp 
	 { $current=$iv_ruleCmp.current; } 
	 EOF 
;

// Rule Cmp
ruleCmp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCmpAccess().getPrimaryParserRuleCall_0()); 
    }
    this_Primary_0=rulePrimary
    { 
        $current = $this_Primary_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndAdd(
            grammarAccess.getCmpAccess().getAndExprArgsAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=	'==' 
    {
        newLeafNode(lv_op_2_1, grammarAccess.getCmpAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCmpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=	'/=' 
    {
        newLeafNode(lv_op_2_2, grammarAccess.getCmpAccess().getOpSolidusEqualsSignKeyword_1_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCmpRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCmpAccess().getArgsPrimaryParserRuleCall_1_2_0()); 
	    }
		lv_args_3_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCmpRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_3_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	 iv_rulePrimary=rulePrimary 
	 { $current=$iv_rulePrimary.current; } 
	 EOF 
;

// Rule Primary
rulePrimary returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_0_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getOrParserRuleCall_0_1()); 
    }
    this_Or_1=ruleOr
    { 
        $current = $this_Or_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_0_2());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getConstantParserRuleCall_1()); 
    }
    this_Constant_3=ruleConstant
    { 
        $current = $this_Constant_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getNotParserRuleCall_2()); 
    }
    this_Not_4=ruleNot
    { 
        $current = $this_Not_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryAccess().getRefParserRuleCall_3()); 
    }
    this_Ref_5=ruleRef
    { 
        $current = $this_Ref_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	 iv_ruleNot=ruleNot 
	 { $current=$iv_ruleNot.current; } 
	 EOF 
;

// Rule Not
ruleNot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getNotAccess().getNotExprAction_0(),
            $current);
    }
)	otherlv_1='/' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNotAccess().getSolidusKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNotAccess().getArgsPrimaryParserRuleCall_2_0()); 
	    }
		lv_args_2_0=rulePrimary		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNotRule());
	        }
       		add(
       			$current, 
       			"args",
        		lv_args_2_0, 
        		"Primary");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleConstant
entryRuleConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstantRule()); }
	 iv_ruleConstant=ruleConstant 
	 { $current=$iv_ruleConstant.current; } 
	 EOF 
;

// Rule Constant
ruleConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getConstantAccess().getConstantAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_BIN
		{
			newLeafNode(lv_value_1_0, grammarAccess.getConstantAccess().getValueBINTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"BIN");
	    }

)
))
;





RULE_BIN : '"' ('0'|'1')+ '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


